# Heavily inspired by the rust-analyzer CI configuration
# Checks done here should be a strict subset of bors.yaml!

name: PR CI

on: pull_request

env:
  CARGO_INCREMENTAL: 0

jobs:

  tests:
    name: Thin Tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: beta
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Cache target
        uses: actions/cache@v1
        id: cache
        with:
          path: target
          key: ${{ runner.os }}-rustc-${{ steps.toolchain.outputs.rustc_hash }}-target-${{ hashFiles('**/Cargo.lock') }}
          # We deliberately don't fall back to old caches to avoid including unused dependencies' artifacts in the cache

      - name: Compile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-targets --locked --no-run

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-targets --frozen --no-fail-fast

      - name: Check warnings
        uses: actions-rs/cargo@v1
        if: "!cancelled()"
        with:
          command: clippy
          args: --workspace --all-targets --frozen -- -D warnings

      - name: Check formatting
        uses: actions-rs/cargo@v1
        if: "!cancelled()"
        with:
          command: fmt
          args: --all -- --check

      - name: Prepare cache
        uses: actions-rs/cargo@v1
        if: "!steps.cache.outputs.cache-hit"
        with:
          command: xtask
          args: clean
